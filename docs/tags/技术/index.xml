<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>技术 on Mr Fox</title>
    <link>https://xli.me/tags/%E6%8A%80%E6%9C%AF/</link>
    <description>Recent content in 技术 on Mr Fox</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-Hans</language>
    <lastBuildDate>Tue, 11 Dec 2018 07:55:58 +0000</lastBuildDate>
    
	<atom:link href="https://xli.me/tags/%E6%8A%80%E6%9C%AF/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>让终端 sudo 时用上 Touch ID</title>
      <link>https://xli.me/post/l/2018/15/</link>
      <pubDate>Tue, 11 Dec 2018 07:55:58 +0000</pubDate>
      
      <guid>https://xli.me/post/l/2018/15/</guid>
      <description>用了一段时间 MacBook Pro with TouchBar 感觉开机或唤醒时读指纹还是很方便的，但安装一些软件或执行命令操作时还是需要输入密码，似乎不那么省事，对设置复杂密码也不够友好。今天学到了一个新技巧，让我们在终端里sudo执行命令时不再需要手输密码，而是Touch ID验证。
修改/etc/pam.d/sudo这个文件，建议用 sudo vim /etc/pam.d/sudo
在第一行增加 auth sufficient pam_tid.so
现在尝试下 sudo 操作吧，应该会看到提示识别指纹而不是输入密码了。
如果你使用了 tmux 需要 添加额外的配置
https://github.com/fabianishere/pam_reattach
git clone https://github.com/fabianishere/pam_reattach cmake -DCMAKE_INSTALL_PREFIX:PATH=/usr/local &amp;lt;PATH-TO-SOURCE&amp;gt; make sudo make install
修改/etc/pam.d/sudo这个文件，建议用 sudo vim /etc/pam.d/sudo
在第一行增加 auth optional pam_reattach.so
然后就可以顺利使用了
评论地址</description>
    </item>
    
    <item>
      <title>磁盘挂载</title>
      <link>https://xli.me/post/l/2018/14/</link>
      <pubDate>Tue, 11 Dec 2018 07:02:40 +0000</pubDate>
      
      <guid>https://xli.me/post/l/2018/14/</guid>
      <description>硬盘挂载 硬盘挂载 mount -o rw /dev/sdb1 /disk/sata01
显示 硬盘设备生产商 lsscsi 可以用于查看是 ssd 还是 hdd 查看挂载关系 lsblk
查看硬盘设备 fdisk -l
显示硬盘使用信息 df -lh
评论地址</description>
    </item>
    
    <item>
      <title>iptables 端口转发</title>
      <link>https://xli.me/post/l/2018/13/</link>
      <pubDate>Fri, 22 Jun 2018 09:47:21 +0000</pubDate>
      
      <guid>https://xli.me/post/l/2018/13/</guid>
      <description>列出所有规则 iptables -t nat --line-numbers -L
 删除指定规则 iptables -t nat -D OUTPUT 2 端口转发 示例从 9001 转发到 8000 iptables -t nat -A PREROUTING -p tcp --dport 8000 -j REDIRECT --to-ports 9001 iptables -t nat -A OUTPUT -p tcp -d localhost --dport 8000 -j REDIRECT --to-ports 9001  评论地址</description>
    </item>
    
    <item>
      <title>EOS eosio.system 和 eosio.token 合约部署</title>
      <link>https://xli.me/post/l/2018/12/</link>
      <pubDate>Thu, 17 May 2018 12:53:13 +0000</pubDate>
      
      <guid>https://xli.me/post/l/2018/12/</guid>
      <description>eos 版本 dawn-v4.0.0 前置条件 bios 已经设置好了，相关的 bp 也已经设置完毕  # 创建 token 对应的账号 ./programs/cleos/cleos --wallet-url http://localhost:8899 --url http://127.0.0.1:8788 create account eosio eosio.token EOS6MRyAjQq8ud7hVNYcfnVPJqcVpscN5So8BhtHuGYqET5GDW5CV EOS6MRyAjQq8ud7hVNYcfnVPJqcVpscN5So8BhtHuGYqET5GDW5CV # 部署 system 合约 ./programs/cleos/cleos --wallet-url http://localhost:8899 --url http://127.0.0.1:8788 set contract eosio.token contracts/eosio.system -p eosio.token@active # 部署token 合约 ./programs/cleos/cleos --wallet-url http://localhost:8899 --url http://127.0.0.1:8788 set contract eosio.token contracts/eosio.token -p eosio.token@active # 创建 eos token ./programs/cleos/cleos --wallet-url http://localhost:8899 --url http://127.0.0.1:8788 push action eosio.token create &amp;#39;{&amp;#34;issuer&amp;#34;:&amp;#34;eosio.token&amp;#34;, &amp;#34;maximum_supply&amp;#34;:&amp;#34;1000000000.0000 EOS&amp;#34;,&amp;#34;can_freeze&amp;#34;:0, &amp;#34;can_recall&amp;#34;:0, &amp;#34;can_whitelist&amp;#34;:0}&amp;#39; -p eosio.</description>
    </item>
    
    <item>
      <title>EOS 智能合约体验</title>
      <link>https://xli.me/post/l/2018/5/</link>
      <pubDate>Mon, 12 Mar 2018 09:06:06 +0000</pubDate>
      
      <guid>https://xli.me/post/l/2018/5/</guid>
      <description>接上文: https://github.com/kaidiren/D6/issues/4
官方文档地址: https://github.com/EOSIO/eos#example-currency-contract-walkthrough
智能合约示例 首先启动 节点
docker-compose up
导入帐号 在创世区块的配置中已经存在一个 eosio 的账户, 把私钥导入.
eosioc wallet import 5KQwrPbwdL6PhXujxW37FSSQZ1JiwsST4cqQzDeyXtP79zkvFD3 为 &amp;ldquo;currency&amp;rdquo; 合约创建帐号 先生成2个密钥对:
rkd@mac:~/blockchain/eos/Docker$ eosioc create key Private key: 5KMohsQ5cqXGgMRPH5qXqaTpRhrThwtGT7e8sqS7KuxXRxGLFfW Public key: EOS55iuKLbH2XhNv4pJXjNtxTJYoD5Xes2PuB4N7LYfgdeEjFPWat // owner_key rkd@mac:~/blockchain/eos/Docker$ eosioc create key Private key: 5K8T42F56S6VX3bFh3sC6UcNjC1aQEY37AmK2rdnXVzsSX3YeCT Public key: EOS6RPNryk7rxkrcxKEigmrNBS4dzGcUqdoWT4HupbrbYnVro5npM // active_key 通过 eosio 这个帐号, 创建 currency 帐号
eosioc create account eosio currency EOS55iuKLbH2XhNv4pJXjNtxTJYoD5Xes2PuB4N7LYfgdeEjFPWat EOS55iuKLbH2XhNv4pJXjNtxTJYoD5Xes2PuB4N7LYfgdeEjFPWat 会返回一大段 json 串就说明成功了
查询一下: eosioc get account currency
返回结果:
{ &amp;#34;account_name&amp;#34;: &amp;#34;currency&amp;#34;, &amp;#34;permissions&amp;#34;: [] } 导入钱包私钥:</description>
    </item>
    
    <item>
      <title>EOS 部署尝试 </title>
      <link>https://xli.me/post/l/2018/4/</link>
      <pubDate>Mon, 12 Mar 2018 08:44:10 +0000</pubDate>
      
      <guid>https://xli.me/post/l/2018/4/</guid>
      <description>基础条件
 docker git  如果不知道怎么安装请,自己百度 或 者 google, 这里就不详细说明了. 为什么使用docker 是因为构建过程依赖复杂,还很耗费时间所以直接使用dockerhub上构建好的镜像.
下载项目和配置 git clone https://github.com/EOSIO/eos.git cd eos/Docker docker pull eosio/eos
编辑 docker-compose.yml 文件, 替换为:
version: &amp;quot;2&amp;quot; services: eosiod: image: eosio/eos command: /opt/eosio/bin/start_eosiod.sh ports: - 8888:8888 - 9876:9876 expose: - &amp;quot;8888&amp;quot; volumes: - eosiod-data-volume:/opt/eosio/bin/data-dir - ./config.ini:/opt/eosio/bin/data-dir/config.ini walletd: image: eosio/eos command: /opt/eosio/bin/eosiowd links: - eosiod volumes: - walletd-data-volume:/opt/eosio/bin/data-dir volumes: eosiod-data-volume: walletd-data-volume:  项目启动与重启 执行 docker-compose up 启动文件
如果想要修改配置文件, 直接编辑当前目录下的 config.ini, 修改完成后, 执行 docker-compose down -v, docker-compose up 即可.</description>
    </item>
    
  </channel>
</rss>